$date
	Sun Aug 17 17:28:38 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_norm $end
$var wire 180 ! weights_bus [179:0] $end
$var wire 11 " norm [10:0] $end
$scope begin genblk2[0] $end
$var parameter 2 # j $end
$upscope $end
$scope begin genblk2[1] $end
$var parameter 2 $ j $end
$upscope $end
$scope begin genblk2[2] $end
$var parameter 3 % j $end
$upscope $end
$scope begin genblk2[3] $end
$var parameter 3 & j $end
$upscope $end
$scope begin genblk2[4] $end
$var parameter 4 ' j $end
$upscope $end
$scope begin genblk2[5] $end
$var parameter 4 ( j $end
$upscope $end
$scope begin genblk2[6] $end
$var parameter 4 ) j $end
$upscope $end
$scope begin genblk2[7] $end
$var parameter 4 * j $end
$upscope $end
$scope begin genblk2[8] $end
$var parameter 5 + j $end
$upscope $end
$scope begin genblk2[9] $end
$var parameter 5 , j $end
$upscope $end
$scope begin genblk2[10] $end
$var parameter 5 - j $end
$upscope $end
$scope begin genblk2[11] $end
$var parameter 5 . j $end
$upscope $end
$scope begin genblk2[12] $end
$var parameter 5 / j $end
$upscope $end
$scope begin genblk2[13] $end
$var parameter 5 0 j $end
$upscope $end
$scope begin genblk2[14] $end
$var parameter 5 1 j $end
$upscope $end
$scope begin genblk2[15] $end
$var parameter 5 2 j $end
$upscope $end
$scope begin genblk2[16] $end
$var parameter 6 3 j $end
$upscope $end
$scope begin genblk2[17] $end
$var parameter 6 4 j $end
$upscope $end
$scope begin genblk2[18] $end
$var parameter 6 5 j $end
$upscope $end
$scope begin genblk2[19] $end
$var parameter 6 6 j $end
$upscope $end
$scope begin weights[0] $end
$var parameter 2 7 j $end
$var reg 9 8 weight [8:0] $end
$upscope $end
$scope begin weights[1] $end
$var parameter 2 9 j $end
$var reg 9 : weight [8:0] $end
$upscope $end
$scope begin weights[2] $end
$var parameter 3 ; j $end
$var reg 9 < weight [8:0] $end
$upscope $end
$scope begin weights[3] $end
$var parameter 3 = j $end
$var reg 9 > weight [8:0] $end
$upscope $end
$scope begin weights[4] $end
$var parameter 4 ? j $end
$var reg 9 @ weight [8:0] $end
$upscope $end
$scope begin weights[5] $end
$var parameter 4 A j $end
$var reg 9 B weight [8:0] $end
$upscope $end
$scope begin weights[6] $end
$var parameter 4 C j $end
$var reg 9 D weight [8:0] $end
$upscope $end
$scope begin weights[7] $end
$var parameter 4 E j $end
$var reg 9 F weight [8:0] $end
$upscope $end
$scope begin weights[8] $end
$var parameter 5 G j $end
$var reg 9 H weight [8:0] $end
$upscope $end
$scope begin weights[9] $end
$var parameter 5 I j $end
$var reg 9 J weight [8:0] $end
$upscope $end
$scope begin weights[10] $end
$var parameter 5 K j $end
$var reg 9 L weight [8:0] $end
$upscope $end
$scope begin weights[11] $end
$var parameter 5 M j $end
$var reg 9 N weight [8:0] $end
$upscope $end
$scope begin weights[12] $end
$var parameter 5 O j $end
$var reg 9 P weight [8:0] $end
$upscope $end
$scope begin weights[13] $end
$var parameter 5 Q j $end
$var reg 9 R weight [8:0] $end
$upscope $end
$scope begin weights[14] $end
$var parameter 5 S j $end
$var reg 9 T weight [8:0] $end
$upscope $end
$scope begin weights[15] $end
$var parameter 5 U j $end
$var reg 9 V weight [8:0] $end
$upscope $end
$scope begin weights[16] $end
$var parameter 6 W j $end
$var reg 9 X weight [8:0] $end
$upscope $end
$scope begin weights[17] $end
$var parameter 6 Y j $end
$var reg 9 Z weight [8:0] $end
$upscope $end
$scope begin weights[18] $end
$var parameter 6 [ j $end
$var reg 9 \ weight [8:0] $end
$upscope $end
$scope begin weights[19] $end
$var parameter 6 ] j $end
$var reg 9 ^ weight [8:0] $end
$upscope $end
$scope module nromer $end
$var wire 180 _ weights [179:0] $end
$var wire 16 ` square0 [15:0] $end
$var wire 11 a norm [10:0] $end
$var wire 10 b mag_norm [9:0] $end
$var wire 8 c base0 [7:0] $end
$scope begin sq_sum[1] $end
$var wire 8 d base [7:0] $end
$var wire 15 e square [14:0] $end
$var wire 15 f res [14:0] $end
$var parameter 2 g i $end
$upscope $end
$scope begin sq_sum[2] $end
$var wire 8 h base [7:0] $end
$var wire 15 i square [14:0] $end
$var wire 15 j res [14:0] $end
$var parameter 3 k i $end
$upscope $end
$scope begin sq_sum[3] $end
$var wire 8 l base [7:0] $end
$var wire 15 m square [14:0] $end
$var wire 15 n res [14:0] $end
$var parameter 3 o i $end
$upscope $end
$scope begin sq_sum[4] $end
$var wire 8 p base [7:0] $end
$var wire 15 q square [14:0] $end
$var wire 15 r res [14:0] $end
$var parameter 4 s i $end
$upscope $end
$scope begin sq_sum[5] $end
$var wire 8 t base [7:0] $end
$var wire 15 u square [14:0] $end
$var wire 15 v res [14:0] $end
$var parameter 4 w i $end
$upscope $end
$scope begin sq_sum[6] $end
$var wire 8 x base [7:0] $end
$var wire 15 y square [14:0] $end
$var wire 15 z res [14:0] $end
$var parameter 4 { i $end
$upscope $end
$scope begin sq_sum[7] $end
$var wire 8 | base [7:0] $end
$var wire 15 } square [14:0] $end
$var wire 15 ~ res [14:0] $end
$var parameter 4 !" i $end
$upscope $end
$scope begin sq_sum[8] $end
$var wire 8 "" base [7:0] $end
$var wire 15 #" square [14:0] $end
$var wire 15 $" res [14:0] $end
$var parameter 5 %" i $end
$upscope $end
$scope begin sq_sum[9] $end
$var wire 8 &" base [7:0] $end
$var wire 15 '" square [14:0] $end
$var wire 15 (" res [14:0] $end
$var parameter 5 )" i $end
$upscope $end
$scope begin sq_sum[10] $end
$var wire 8 *" base [7:0] $end
$var wire 15 +" square [14:0] $end
$var wire 15 ," res [14:0] $end
$var parameter 5 -" i $end
$upscope $end
$scope begin sq_sum[11] $end
$var wire 8 ." base [7:0] $end
$var wire 15 /" square [14:0] $end
$var wire 15 0" res [14:0] $end
$var parameter 5 1" i $end
$upscope $end
$scope begin sq_sum[12] $end
$var wire 8 2" base [7:0] $end
$var wire 15 3" square [14:0] $end
$var wire 15 4" res [14:0] $end
$var parameter 5 5" i $end
$upscope $end
$scope begin sq_sum[13] $end
$var wire 8 6" base [7:0] $end
$var wire 15 7" square [14:0] $end
$var wire 15 8" res [14:0] $end
$var parameter 5 9" i $end
$upscope $end
$scope begin sq_sum[14] $end
$var wire 8 :" base [7:0] $end
$var wire 15 ;" square [14:0] $end
$var wire 15 <" res [14:0] $end
$var parameter 5 =" i $end
$upscope $end
$scope begin sq_sum[15] $end
$var wire 8 >" base [7:0] $end
$var wire 15 ?" square [14:0] $end
$var wire 15 @" res [14:0] $end
$var parameter 5 A" i $end
$upscope $end
$scope begin sq_sum[16] $end
$var wire 8 B" base [7:0] $end
$var wire 15 C" square [14:0] $end
$var wire 15 D" res [14:0] $end
$var parameter 6 E" i $end
$upscope $end
$scope begin sq_sum[17] $end
$var wire 8 F" base [7:0] $end
$var wire 15 G" square [14:0] $end
$var wire 15 H" res [14:0] $end
$var parameter 6 I" i $end
$upscope $end
$scope begin sq_sum[18] $end
$var wire 8 J" base [7:0] $end
$var wire 15 K" square [14:0] $end
$var wire 15 L" res [14:0] $end
$var parameter 6 M" i $end
$upscope $end
$scope begin sq_sum[19] $end
$var wire 8 N" base [7:0] $end
$var wire 15 O" square [14:0] $end
$var wire 15 P" res [14:0] $end
$var parameter 6 Q" i $end
$upscope $end
$scope module norm_val $end
$var wire 10 R" out [9:0] $end
$var wire 15 S" in [14:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10011 Q"
b10010 M"
b10001 I"
b10000 E"
b1111 A"
b1110 ="
b1101 9"
b1100 5"
b1011 1"
b1010 -"
b1001 )"
b1000 %"
b111 !"
b110 {
b101 w
b100 s
b11 o
b10 k
b1 g
b10011 ]
b10010 [
b10001 Y
b10000 W
b1111 U
b1110 S
b1101 Q
b1100 O
b1011 M
b1010 K
b1001 I
b1000 G
b111 E
b110 C
b101 A
b100 ?
b11 =
b10 ;
b1 9
b0 7
b10011 6
b10010 5
b10001 4
b10000 3
b1111 2
b1110 1
b1101 0
b1100 /
b1011 .
b1010 -
b1001 ,
b1000 +
b111 *
b110 )
b101 (
b100 '
b11 &
b10 %
b1 $
b0 #
$end
#0
$dumpvars
b0 S"
b0 R"
b0 P"
b0 O"
b0 N"
b0 L"
b0 K"
b0 J"
b0 H"
b0 G"
b0 F"
b0 D"
b0 C"
b0 B"
b0 @"
b0 ?"
b0 >"
b0 <"
b0 ;"
b0 :"
b0 8"
b0 7"
b0 6"
b0 4"
b0 3"
b0 2"
b0 0"
b0 /"
b0 ."
b0 ,"
b0 +"
b0 *"
b0 ("
b0 '"
b0 &"
b0 $"
b0 #"
b0 ""
b0 ~
b0 }
b0 |
b0 z
b0 y
b0 x
b0 v
b0 u
b0 t
b0 r
b0 q
b0 p
b0 n
b0 m
b0 l
b0 j
b0 i
b0 h
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 \
b0 Z
b0 X
b0 V
b0 T
b0 R
b0 P
b0 N
b0 L
b0 J
b0 H
b0 F
b0 D
b0 B
b0 @
b0 >
b0 <
b0 :
b0 8
b0 "
b0 !
$end
#1
b11000 "
b11000 a
b11000 b
b11000 R"
b1000000 @"
b1000000 ?"
b1000 >"
b10100100 D"
b1100100 C"
b1010 B"
b100110100 H"
b10010000 G"
b1100 F"
b110101101 L"
b1111001 K"
b1011 J"
b1001010110 S"
b1001010110 P"
b10101001 O"
b1101 N"
b1000 V
b1010 X
b1100 Z
b1011 \
b1101000001011000001100000001010000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 !
b1101000001011000001100000001010000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 _
b1101 ^
#16
